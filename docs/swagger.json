{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "phonebook",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is phonebook service"
  },
  "servers": [
    {
      "url": "https://nodejs-hw-mongodb-0f2k.onrender.com/"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Operation with contacts"
    }
  ],
  "paths": {
    "/contacts/{id}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "507f1f77bcf86cd799439011"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 6001d56eb4851e04de2c1cf7"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by id",
        "operationId": "deleteContact",
        "description": "Delete contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "507f1f77bcf86cd799439011"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deleted contact by id (without response)"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update contact by id",
        "operationId": "updateContact",
        "description": "Updatet contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "_id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "507f1f77bcf86cd799439011"
            },
            "description": "Contact id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/updateContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact updated successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create contact",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Contact name",
                    "example": "John Wick"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Contact phone number",
                    "example": "+38 (098) 765 43 21"
                  },
                  "email": {
                    "type": "string",
                    "description": "Contact email",
                    "example": "myEmail@example.ua"
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Contact type",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Contact is favourite",
                    "example": true,
                    "default": false
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Contact photo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact creadet successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Get all contacts",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "example": 7
            },
            "description": "Number of current page"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 4,
              "example": 3
            },
            "description": "Number of contacts per page"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "_id",
                "name"
              ],
              "example": "name",
              "default": "_id"
            },
            "description": "select which parameter to sort by"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "desc",
              "default": "asc"
            },
            "description": "asc - ascending, desc - descending"
          }
        ],
        "responses": {
          "200": {
            "description": "Get all contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "description": "Data object"
                    },
                    "page": {
                      "type": "integer",
                      "example": 3,
                      "default": 1,
                      "description": "Number of current page"
                    },
                    "perPage": {
                      "type": "integer",
                      "example": 7,
                      "default": 4,
                      "description": "Contacts per page"
                    },
                    "totalItems": {
                      "type": "integer",
                      "example": 0,
                      "description": "Total contacts"
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1,
                      "description": "Total pages"
                    },
                    "hasPreviousPage": {
                      "type": "boolean",
                      "example": false,
                      "description": "Informs if there is a previous page"
                    },
                    "hasNextPage": {
                      "type": "boolean",
                      "example": false,
                      "description": "Informs if there is a next page"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "email",
          "isFavourite",
          "contactType",
          "userId",
          "photo",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "Contact id",
            "example": "1127ba7a2572a050fcccb7c4"
          },
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "example": "+38 (099) 999-99-99"
          },
          "email": {
            "type": "string",
            "description": "Contact e-mail",
            "example": "myEmail@example.ua"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Contact is isFavourite",
            "example": true,
            "default": false
          },
          "contactType": {
            "type": "string",
            "description": "Contact type",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "userId": {
            "type": "string",
            "description": "Contact owner id",
            "example": "68459f0055ff84d15f176f3e"
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "description": "Contact photo url"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Contact creation date",
            "example": "2025-06-19T09:47:13.957+00:00"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Contact updated application",
            "example": "2025-06-19T09:47:13.957+00:00"
          }
        }
      },
      "updateContact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Contact name",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "description": "Contact phone number",
            "example": "+38 (099) 999-99-99"
          },
          "email": {
            "type": "string",
            "description": "Contact e-mail",
            "example": "myEmail@example.ua"
          },
          "isFavourite": {
            "type": "boolean",
            "description": "Contact is isFavourite",
            "example": true,
            "default": false
          },
          "contactType": {
            "type": "string",
            "description": "Contact type",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "photo": {
            "type": "string",
            "format": "binary",
            "description": "Contact photo url"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized Error"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token not provided"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}